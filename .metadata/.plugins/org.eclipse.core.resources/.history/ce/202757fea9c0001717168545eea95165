package huat.create_pattern;

public class FactoryPatternDemo {

	public static void main(String[] args) {
		// 工厂设计模式（创造模式）此模式提供了创建对象方法。
		ShapFactory sf = new ShapFactory();
		sf.getShap("square").draw();
	}

}
//定义一个接口
interface Shap{
	void draw();
}
//两个类实现该接口
class Circle implements Shap{

	@Override
	public void draw() {
		// TODO Auto-generated method stub
		System.out.println("circle...");
	}
	
}

class Square implements Shap{

	@Override
	public void draw() {
		// TODO Auto-generated method stub
		System.out.println("square...");
	}
	
}

class ShapFactory{
	
	public Shap getShap(String shap){
		if(shap==null){
			return null;
		}

		if(shap.equals("circle")){
			return new Circle();
		}
		
		if(shap.equals("square")){
			return new Square();
		}
		return null;
		
	}
}
